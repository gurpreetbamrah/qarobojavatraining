Object-Oriented Programming is a methodology or paradigm to
 design a program using classes and objects.
----------------------------------------------------------------
It simplifies software development and maintenance by providing
some concepts:

Object
Class
Inheritance
Polymorphism
Abstraction
Encapsulation

-----------------------------------------------------------------
Object

Java Object
Any entity that has state and behavior is known as an object.
For example, a chair, pen, table, keyboard, bike, etc.
It can be physical or logical.

An Object can be defined as an instance of a class.
An object contains an address and takes up some space in memory.

------------------------------------------------------------------

Class
Collection of objects is called class. It is a logical entity.
A class can also be defined as a blueprint from which you can
create an individual object.
Class doesn't consume any space.

-------------------------------------------------------------------

Inheritance
When one object acquires all the properties and behaviors of a parent object,
 it is known as inheritance. It provides code reusability.
It is used to achieve runtime polymorphism.

-------------------------------------------------------------------------------

Polymorphism
If one task is performed in different ways, it is known as polymorphism.
For example: to convince the customer differently, to draw something, for example, shape, triangle, rectangle, etc.
In Java, we use method overloading and method overriding to achieve polymorphism
Another example can be to speak something; for example, a cat speaks meow, dog barks woof, etc.
--------------------------------------------------------------------------------
Abstraction
Hiding internal details and showing functionality is known as abstraction.
For example phone call, we don't know the internal processing.
In Java, we use abstract class and interface to achieve abstraction.
---------------------------------------------------------------------------------
Encapsulation
Binding (or wrapping) code and data together into a single unit are known
 as encapsulation.
For example, a capsule, it is wrapped with different medicines.
A java class is the example of encapsulation.
Java bean is the fully encapsulated class
because all the data members are private here.
-----------------------------------------------------------------------------------

Difference between OOPs over Procedure-oriented programming language


-----------------------------------------------------------------------------------
Polymorphism in Java is a concept by which we can perform
 a single action in different ways.

There are two types of polymorphism in Java:
compile-time polymorphism and runtime polymorphism.
We can perform polymorphism in java by
method overloading and method overriding.