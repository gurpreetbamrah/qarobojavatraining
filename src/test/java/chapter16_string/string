In Java, Generally, String is a sequence of characters.

How to create a string object:

By string literal
By new keyword

1) String Literal
Java String literal is created by using double quotes. For Example:

String s="welcome";
Each time you create a string literal,
the JVM checks the "string constant pool" first.
If the string already exists in the pool,
a reference to the pooled instance is returned.
If the string doesn't exist in the pool,
a new string instance is created and placed in
the pool. For example:

String s1="Welcome";
String s2="Welcome";//It doesn't create a new instance

Note: String objects are stored in a special memory area
known as the "string constant pool".


next â†’
Java String
In Java, string is basically an object that represents sequence of char values. An array of characters works same as Java string. For example:

char[] ch={'j','a','v','a','t','p','o','i','n','t'};
String s=new String(ch);
is same as:

String s="javatpoint";
Java String class provides a lot of methods to perform operations on string such as compare(), concat(), equals(), split(), length(), replace(), compareTo(), intern(), substring() etc.


The java.lang.String class implements Serializable, Comparable and CharSequence interfaces.

String in Java
CharSequence Interface
The CharSequence interface is used to represent the sequence of characters. String, StringBuffer and StringBuilder classes implement it. It means, we can create strings in java by using these three classes.

CharSequence in Java
The Java String is immutable which means it cannot be changed. Whenever we change any string, a new instance is created. For mutable strings, you can use StringBuffer and StringBuilder classes.

We will discuss immutable string later. Let's first understand what is String in Java and how to create the String object.



What is String in java
Generally, String is a sequence of characters. But in Java, string is an object that represents a sequence of characters. The java.lang.String class is used to create a string object.

How to create a string object?
There are two ways to create String object:

By string literal
By new keyword
1) String Literal
Java String literal is created by using double quotes. For Example:

String s="welcome";
Each time you create a string literal, the JVM checks the "string constant pool" first. If the string already exists in the pool, a reference to the pooled instance is returned. If the string doesn't exist in the pool, a new string instance is created and placed in the pool. For example:

String s1="Welcome";
String s2="Welcome";//It doesn't create a new instance
Java string literal
In the above example, only one object will be created.

Note: String objects are stored in a special memory
area known as the "string constant pool".
Why Java uses the concept of String literal?
To make Java more memory efficient (because no new objects
are created if it exists already in the string constant pool).


String s=new String("Welcome");//creates two objects
and one reference variable  In such case, JVM will
create a new string object in normal (non-pool) heap memory,
and the literal "Welcome" will be placed in the string constant pool.
The variable s will refer to the object in a heap (non-pool).


In java, string objects are immutable.
Immutable simply means unmodifiable or unchangeable.

Once string object is created its data or
state can't be changed but a new string object is created.


Now it can be understood by the diagram given below.
 Here Sachin is not changed but a new object is created with sachintendulkar.
 That is why string is known as immutable.